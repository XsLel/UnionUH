{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Ing-software\\\\proyecto\\\\turismo-umss\\\\client\\\\src\\\\Components\\\\Form.js\";\nimport React from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nconst registerRestaurant = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, \"Formulario de Registro de Restaurante\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"hola mundo\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"files\",\n    name: \"files[]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"output\", {\n    id: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }));\n};\n\nfunction handleFileSelect(evt) {\n  var files = evt.target.files; // FileList object\n  // Recorra la FileList y renderice los archivos de imagen como miniaturas.\n\n  for (var i = 0, f; f = files[i]; i++) {\n    // Solo procesa archivos de imagen.\n    if (!f.type.match('image.*')) {\n      continue;\n    }\n\n    var reader = new FileReader(); // Cierre para capturar la información del archivo.\n\n    reader.onload = function (theFile) {\n      return function (e) {\n        // Renderizar miniatura.\n        var span = document.createElement('span');\n        span.innerHTML = ['<img class=\"thumb\" src=\"', e.target.result, '\" title=\"', escape(theFile.name), '\"/>'].join('');\n        document.getElementById('list').insertBefore(span, null);\n      };\n    }(f); // Leer en el archivo de imagen como una URL de datos.\n\n\n    reader.readAsDataURL(f);\n    console.log(f);\n  }\n}\n\ndocument.getElementById('root').addEventListener('change', handleFileSelect, false);\n\nfunction check_valid_image_size($file) {\n  $allowed_mimetypes = array('image/gif', 'image/jpeg', 'image/png', 'image/bmp');\n\n  if (!in_array($file['type'], $allowed_mimetypes)) {\n    return $file;\n  }\n\n  $image = getimagesize($file['tmp_name']);\n  $maximum = array('width' == '1024', 'height' == '768');\n  $image_width = $image[0];\n  $image_height = $image[1];\n  $too_large = \"Image dimensions are too large. Maximum size is {$maximum['width']} by {$maximum['height']} pixels. Uploaded image is $image_width by $image_height pixels.\";\n\n  if ($image_width > $maximum['width'] || $image_height > $maximum['height']) {\n    //add in the field 'error' of the $file array the message\n    $file['error'] = $too_large;\n    return $file;\n  } else {\n    return $file;\n  }\n}\n\nadd_filter('wp_handle_upload_prefilter', 'check_valid_image_size');\nexport default registerRestaurant;","map":{"version":3,"sources":["C:/Users/Alex/Desktop/Ing-software/proyecto/turismo-umss/client/src/Components/Form.js"],"names":["React","Button","registerRestaurant","handleFileSelect","evt","files","target","i","f","type","match","reader","FileReader","onload","theFile","e","span","document","createElement","innerHTML","result","escape","name","join","getElementById","insertBefore","readAsDataURL","console","log","addEventListener","check_valid_image_size","$file","$allowed_mimetypes","array","in_array","$image","getimagesize","$maximum","$image_width","$image_height","$too_large","add_filter"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst registerRestaurant=() => {\r\n\r\n    return(\r\n        <div class=\"container\">\r\n            <h4>Formulario de Registro de Restaurante</h4>\r\n            <p>hola mundo</p>\r\n            <input type=\"file\" id=\"files\" name=\"files[]\" ></input>\r\n            <output id=\"list\"></output>\r\n           \r\n           \r\n        </div> \r\n    ) \r\n}\r\n\r\nfunction handleFileSelect(evt) {\r\n    var files = evt.target.files; // FileList object\r\n\r\n    // Recorra la FileList y renderice los archivos de imagen como miniaturas.\r\n    for (var i = 0, f; f = files[i]; i++) {\r\n\r\n      // Solo procesa archivos de imagen.\r\n      if (!f.type.match('image.*')) {\r\n        continue;\r\n      }\r\n\r\n      var reader = new FileReader();\r\n\r\n      // Cierre para capturar la información del archivo.\r\n      reader.onload = (function(theFile) {\r\n        return function(e) {\r\n          // Renderizar miniatura.\r\n          var span = document.createElement('span');\r\n          span.innerHTML = ['<img class=\"thumb\" src=\"', e.target.result,\r\n                            '\" title=\"', escape(theFile.name), '\"/>'].join('');\r\n          document.getElementById('list').insertBefore(span, null);\r\n        };\r\n      })(f);\r\n\r\n      // Leer en el archivo de imagen como una URL de datos.\r\n      reader.readAsDataURL(f);\r\n      console.log(f);\r\n    }\r\n  }\r\n\r\n  document.getElementById('root').addEventListener('change', handleFileSelect, false);\r\n  function check_valid_image_size( $file ) {\r\n    $allowed_mimetypes = array('image/gif', 'image/jpeg', 'image/png', 'image/bmp');\r\n \r\n    if (!in_array($file['type'], $allowed_mimetypes)){\r\n        return $file;\r\n    }\r\n \r\n    $image = getimagesize($file['tmp_name']);\r\n \r\n    $maximum = array(\r\n        'width' == '1024',\r\n        'height' == '768'\r\n    );\r\n \r\n    $image_width = $image[0];\r\n    $image_height = $image[1];\r\n \r\n    $too_large = \"Image dimensions are too large. Maximum size is {$maximum['width']} by {$maximum['height']} pixels. Uploaded image is $image_width by $image_height pixels.\";\r\n \r\n    if ( $image_width > $maximum['width'] || $image_height > $maximum['height'] ) {\r\n        //add in the field 'error' of the $file array the message\r\n        $file['error'] = $too_large;\r\n        return $file;\r\n    }else {\r\n        return $file;\r\n    }\r\n}\r\nadd_filter('wp_handle_upload_prefilter', 'check_valid_image_size');\r\n \r\n  \r\n\r\nexport default registerRestaurant\r\n"]},"metadata":{},"sourceType":"module"}