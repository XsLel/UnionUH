{"ast":null,"code":"import axios from \"axios\";\nimport history from \"../history\";\nconst baseURL = \"/api\";\nconst BEConfig = {\n  baseURL,\n  headers: {}\n};\n\nconst handleStatusCodes = ({\n  data,\n  status,\n  ...rest\n}) => {\n  switch (status) {\n    case 400:\n      return data;\n\n    case 401:\n      //logout\n      break;\n\n    case 403:\n      return {\n        error: \"forbidden\"\n      };\n\n    case 404:\n      history.push(\"/404\");\n      return;\n\n    case 500:\n      console.error(`status ${status}: ${JSON.stringify(data)}`);\n      return data;\n\n    default:\n      console.error(`status ${status}: ${JSON.stringify(data)}`);\n      return {\n        data,\n        status,\n        ...rest\n      };\n  }\n};\n\nconst handleError = error => {\n  if (error.response) {\n    throw handleStatusCodes(error.response);\n  }\n\n  if (error.request) {\n    console.error(error.request);\n    throw new Error(\"The request was made but no response was received\");\n  }\n\n  console.error(\"Error\", error.message);\n  console.error(error.config);\n  throw new Error(\"Something happened in setting up the request that triggered an Error\");\n};\n\nconst addConfiguration = params => ({ ...BEConfig,\n  ...params\n});\n\nconst processResponse = ({\n  data\n}) => data;\n\nconst request = config => axios.request(addConfiguration(config)).then(processResponse).catch(handleError);\n\nexport { request };","map":{"version":3,"sources":["C:/Users/Alejandro/Git/turismo-umss/client/src/services/http/http.js"],"names":["axios","history","baseURL","BEConfig","headers","handleStatusCodes","data","status","rest","error","push","console","JSON","stringify","handleError","response","request","Error","message","config","addConfiguration","params","processResponse","then","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,MAAMC,OAAO,GAAG,MAAhB;AACA,MAAMC,QAAQ,GAAG;AACfD,EAAAA,OADe;AAEfE,EAAAA,OAAO,EAAE;AAFM,CAAjB;;AAKA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgB,KAAGC;AAAnB,CAAD,KAA+B;AACvD,UAAQD,MAAR;AACE,SAAK,GAAL;AACE,aAAOD,IAAP;;AACF,SAAK,GAAL;AACE;AACA;;AACF,SAAK,GAAL;AACE,aAAO;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAP;;AACF,SAAK,GAAL;AACER,MAAAA,OAAO,CAACS,IAAR,CAAa,MAAb;AACA;;AACF,SAAK,GAAL;AACEC,MAAAA,OAAO,CAACF,KAAR,CAAe,UAASF,MAAO,KAAIK,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAqB,EAAxD;AACA,aAAOA,IAAP;;AACF;AACEK,MAAAA,OAAO,CAACF,KAAR,CAAe,UAASF,MAAO,KAAIK,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAqB,EAAxD;AACA,aAAO;AAAEA,QAAAA,IAAF;AAAQC,QAAAA,MAAR;AAAgB,WAAGC;AAAnB,OAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,MAAMM,WAAW,GAAIL,KAAD,IAAW;AAC7B,MAAIA,KAAK,CAACM,QAAV,EAAoB;AAClB,UAAMV,iBAAiB,CAACI,KAAK,CAACM,QAAP,CAAvB;AACD;;AACD,MAAIN,KAAK,CAACO,OAAV,EAAmB;AACjBL,IAAAA,OAAO,CAACF,KAAR,CAAcA,KAAK,CAACO,OAApB;AACA,UAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACD;;AACDN,EAAAA,OAAO,CAACF,KAAR,CAAc,OAAd,EAAuBA,KAAK,CAACS,OAA7B;AACAP,EAAAA,OAAO,CAACF,KAAR,CAAcA,KAAK,CAACU,MAApB;AACA,QAAM,IAAIF,KAAJ,CACJ,sEADI,CAAN;AAGD,CAbD;;AAeA,MAAMG,gBAAgB,GAAIC,MAAD,KAAa,EAAE,GAAGlB,QAAL;AAAe,KAAGkB;AAAlB,CAAb,CAAzB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEhB,EAAAA;AAAF,CAAD,KAAcA,IAAtC;;AAEA,MAAMU,OAAO,GAAIG,MAAD,IACdnB,KAAK,CACFgB,OADH,CACWI,gBAAgB,CAACD,MAAD,CAD3B,EAEGI,IAFH,CAEQD,eAFR,EAGGE,KAHH,CAGSV,WAHT,CADF;;AAMA,SAASE,OAAT","sourcesContent":["import axios from \"axios\";\r\nimport history from \"../history\";\r\n\r\nconst baseURL = \"/api\";\r\nconst BEConfig = {\r\n  baseURL,\r\n  headers: {},\r\n};\r\n\r\nconst handleStatusCodes = ({ data, status, ...rest }) => {\r\n  switch (status) {\r\n    case 400:\r\n      return data;\r\n    case 401:\r\n      //logout\r\n      break;\r\n    case 403:\r\n      return { error: \"forbidden\" };\r\n    case 404:\r\n      history.push(\"/404\");\r\n      return;\r\n    case 500:\r\n      console.error(`status ${status}: ${JSON.stringify(data)}`);\r\n      return data;\r\n    default:\r\n      console.error(`status ${status}: ${JSON.stringify(data)}`);\r\n      return { data, status, ...rest };\r\n  }\r\n};\r\n\r\nconst handleError = (error) => {\r\n  if (error.response) {\r\n    throw handleStatusCodes(error.response);\r\n  }\r\n  if (error.request) {\r\n    console.error(error.request);\r\n    throw new Error(\"The request was made but no response was received\");\r\n  }\r\n  console.error(\"Error\", error.message);\r\n  console.error(error.config);\r\n  throw new Error(\r\n    \"Something happened in setting up the request that triggered an Error\"\r\n  );\r\n};\r\n\r\nconst addConfiguration = (params) => ({ ...BEConfig, ...params });\r\n\r\nconst processResponse = ({ data }) => data;\r\n\r\nconst request = (config) =>\r\n  axios\r\n    .request(addConfiguration(config))\r\n    .then(processResponse)\r\n    .catch(handleError);\r\n\r\nexport { request };\r\n"]},"metadata":{},"sourceType":"module"}