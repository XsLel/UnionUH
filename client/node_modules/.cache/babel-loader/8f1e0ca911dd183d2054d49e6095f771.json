{"ast":null,"code":"var _jsxFileName = \"D:\\\\UMSS\\\\IngSw\\\\Restaurante\\\\turismo-umss\\\\client\\\\src\\\\Admin\\\\Home\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport lodash from \"lodash\";\nimport { Segment, Item, Container } from \"semantic-ui-react\";\nimport { http } from \"../../services\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([http.request({\n      url: \"/users/posts\"\n    }), http.request({\n      url: \"/users/users\"\n    })]).then(([posts, users]) => {\n      const usersById = lodash.keyBy(users, \"id\");\n      const postsWithUsers = posts.map(({\n        userId,\n        ...post\n      }) => ({\n        user: usersById[userId],\n        ...post\n      }));\n      this.setState({\n        posts: postsWithUsers\n      });\n    }).catch(error => {\n      //should show error, for now just alerting in console\n      console.error(error);\n    }).finally(this.setState({\n      loading: false\n    }));\n  }\n\n  render() {\n    const {\n      posts,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Item.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, posts.map(({\n      id,\n      title,\n      body,\n      user: {\n        name,\n        email,\n        company: {\n          name: company\n        }\n      }\n    }) => /*#__PURE__*/React.createElement(Item, {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Item.Image, {\n      size: \"tiny\",\n      src: \"https://react.semantic-ui.com/images/wireframe/image.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Item.Header, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, title), /*#__PURE__*/React.createElement(Item.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: `mailto:${email}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }, email)), /*#__PURE__*/React.createElement(Item.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, body), /*#__PURE__*/React.createElement(Item.Extra, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"Company: \", company)))))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["D:/UMSS/IngSw/Restaurante/turismo-umss/client/src/Admin/Home/Home.js"],"names":["React","Component","lodash","Segment","Item","Container","http","Home","constructor","state","posts","loading","componentDidMount","Promise","all","request","url","then","users","usersById","keyBy","postsWithUsers","map","userId","post","user","setState","catch","error","console","finally","render","id","title","body","name","email","company"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport lodash from \"lodash\";\r\nimport { Segment, Item, Container } from \"semantic-ui-react\";\r\nimport { http } from \"../../services\";\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { posts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      http.request({ url: \"/users/posts\" }),\r\n      http.request({ url: \"/users/users\" }),\r\n    ])\r\n      .then(([posts, users]) => {\r\n        const usersById = lodash.keyBy(users, \"id\");\r\n        const postsWithUsers = posts.map(({ userId, ...post }) => ({\r\n          user: usersById[userId],\r\n          ...post,\r\n        }));\r\n        this.setState({ posts: postsWithUsers });\r\n      })\r\n      .catch((error) => {\r\n        //should show error, for now just alerting in console\r\n        console.error(error);\r\n      })\r\n      .finally(this.setState({ loading: false }));\r\n  }\r\n\r\n  render() {\r\n    const { posts, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <Segment loading={loading}>\r\n          <Item.Group>\r\n            {posts.map(\r\n              ({\r\n                id,\r\n                title,\r\n                body,\r\n                user: {\r\n                  name,\r\n                  email,\r\n                  company: { name: company },\r\n                },\r\n              }) => (\r\n                <Item key={id}>\r\n                  <Item.Image\r\n                    size=\"tiny\"\r\n                    src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\r\n                  />\r\n\r\n                  <Item.Content>\r\n                    <Item.Header as=\"a\">{title}</Item.Header>\r\n                    <Item.Meta>\r\n                      {name} <br />\r\n                      <a href={`mailto:${email}`}>{email}</a>\r\n                    </Item.Meta>\r\n                    <Item.Description>{body}</Item.Description>\r\n                    <Item.Extra>Company: {company}</Item.Extra>\r\n                  </Item.Content>\r\n                </Item>\r\n              )\r\n            )}\r\n          </Item.Group>\r\n        </Segment>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}